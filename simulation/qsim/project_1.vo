// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "07/02/2022 17:30:41"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module serial_to_parallel (
	sEEG,
	nclk,
	clk,
	eegOut);
input 	sEEG;
input 	nclk;
input 	clk;
output 	[3:0] eegOut;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \nclk~input_o ;
wire \eegOut[0]~output_o ;
wire \eegOut[1]~output_o ;
wire \eegOut[2]~output_o ;
wire \eegOut[3]~output_o ;
wire \clk~input_o ;
wire \sEEG~input_o ;
wire \eegOut[0]~reg0_q ;
wire \eegOut[1]~reg0_q ;
wire \eegOut[2]~reg0_q ;
wire \eegOut[3]~reg0_q ;
wire [3:0] temp_reg;
wire [3:0] temp;


cyclonev_io_obuf \eegOut[0]~output (
	.i(\eegOut[0]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\eegOut[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \eegOut[0]~output .bus_hold = "false";
defparam \eegOut[0]~output .open_drain_output = "false";
defparam \eegOut[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \eegOut[1]~output (
	.i(\eegOut[1]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\eegOut[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \eegOut[1]~output .bus_hold = "false";
defparam \eegOut[1]~output .open_drain_output = "false";
defparam \eegOut[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \eegOut[2]~output (
	.i(\eegOut[2]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\eegOut[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \eegOut[2]~output .bus_hold = "false";
defparam \eegOut[2]~output .open_drain_output = "false";
defparam \eegOut[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \eegOut[3]~output (
	.i(\eegOut[3]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\eegOut[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \eegOut[3]~output .bus_hold = "false";
defparam \eegOut[3]~output .open_drain_output = "false";
defparam \eegOut[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \sEEG~input (
	.i(sEEG),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sEEG~input_o ));
// synopsys translate_off
defparam \sEEG~input .bus_hold = "false";
defparam \sEEG~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \temp[3] (
	.clk(\clk~input_o ),
	.d(\sEEG~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(temp[3]),
	.prn(vcc));
// synopsys translate_off
defparam \temp[3] .is_wysiwyg = "true";
defparam \temp[3] .power_up = "low";
// synopsys translate_on

dffeas \temp[2] (
	.clk(\clk~input_o ),
	.d(temp[3]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(temp[2]),
	.prn(vcc));
// synopsys translate_off
defparam \temp[2] .is_wysiwyg = "true";
defparam \temp[2] .power_up = "low";
// synopsys translate_on

dffeas \temp[1] (
	.clk(\clk~input_o ),
	.d(temp[2]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(temp[1]),
	.prn(vcc));
// synopsys translate_off
defparam \temp[1] .is_wysiwyg = "true";
defparam \temp[1] .power_up = "low";
// synopsys translate_on

dffeas \temp[0] (
	.clk(\clk~input_o ),
	.d(temp[1]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(temp[0]),
	.prn(vcc));
// synopsys translate_off
defparam \temp[0] .is_wysiwyg = "true";
defparam \temp[0] .power_up = "low";
// synopsys translate_on

dffeas \temp_reg[0] (
	.clk(\clk~input_o ),
	.d(temp[0]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(temp_reg[0]),
	.prn(vcc));
// synopsys translate_off
defparam \temp_reg[0] .is_wysiwyg = "true";
defparam \temp_reg[0] .power_up = "low";
// synopsys translate_on

dffeas \eegOut[0]~reg0 (
	.clk(\clk~input_o ),
	.d(temp_reg[0]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\eegOut[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \eegOut[0]~reg0 .is_wysiwyg = "true";
defparam \eegOut[0]~reg0 .power_up = "low";
// synopsys translate_on

dffeas \eegOut[1]~reg0 (
	.clk(\clk~input_o ),
	.d(temp[0]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\eegOut[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \eegOut[1]~reg0 .is_wysiwyg = "true";
defparam \eegOut[1]~reg0 .power_up = "low";
// synopsys translate_on

dffeas \eegOut[2]~reg0 (
	.clk(\clk~input_o ),
	.d(temp[1]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\eegOut[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \eegOut[2]~reg0 .is_wysiwyg = "true";
defparam \eegOut[2]~reg0 .power_up = "low";
// synopsys translate_on

dffeas \eegOut[3]~reg0 (
	.clk(\clk~input_o ),
	.d(temp[2]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\eegOut[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \eegOut[3]~reg0 .is_wysiwyg = "true";
defparam \eegOut[3]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \nclk~input (
	.i(nclk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\nclk~input_o ));
// synopsys translate_off
defparam \nclk~input .bus_hold = "false";
defparam \nclk~input .simulate_z_as = "z";
// synopsys translate_on

assign eegOut[0] = \eegOut[0]~output_o ;

assign eegOut[1] = \eegOut[1]~output_o ;

assign eegOut[2] = \eegOut[2]~output_o ;

assign eegOut[3] = \eegOut[3]~output_o ;

endmodule
